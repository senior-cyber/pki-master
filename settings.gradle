rootProject.name = 'pki-master'

include(
        ":pki-service",
        ":pki-api-crl",
        ":pki-api-ocsp",
        ":pki-api-x509",
        ":pki-api-ssh",
        ":pki-api-revoke",
        ":pki-api-root",
        ":pki-api-key",
//        ":pki-root-web",
        ":pki-api-issuer",
//        ":pki-issuer-web",
        ":pki-client-cli",
//        ":pki-client-web",
        ":pki-common",
        ":pki-dao"
)
project(":pki-service").projectDir = file("./pki-service")
project(":pki-common").projectDir = file("./pki-common")
project(":pki-dao").projectDir = file("./pki-dao")
project(":pki-api-root").projectDir = file("./pki-api-root")
project(":pki-api-key").projectDir = file("./pki-api-key")
//project(":pki-root-web").projectDir = file("./pki-root-web")
project(":pki-api-issuer").projectDir = file("./pki-api-issuer")
//project(":pki-issuer-web").projectDir = file("./pki-issuer-web")
project(":pki-api-crl").projectDir = file("./pki-api-crl")
project(":pki-api-ocsp").projectDir = file("./pki-api-ocsp")
project(":pki-api-x509").projectDir = file("./pki-api-x509")
project(":pki-api-ssh").projectDir = file("./pki-api-ssh")
project(":pki-api-revoke").projectDir = file("./pki-api-revoke")
project(":pki-client-cli").projectDir = file("./pki-client-cli")
//project(":pki-client-web").projectDir = file("./pki-client-web")